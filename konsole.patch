diff --git a/src/buildmanager.cpp b/src/buildmanager.cpp
index 6a69bb13..51d9156d 100644
--- a/src/buildmanager.cpp
+++ b/src/buildmanager.cpp
@@ -362,38 +362,7 @@ void BuildManager::initDefaultCommandNames()
 
 QString BuildManager::guessTerminalExternal(void)
 {
-#if defined(Q_OS_DARWIN)
-	return "open -a Terminal ?c:a\"";
-#elif defined(Q_OS_UNIX)
-	// Linux/Unix does not have a uniform way to determine the default terminal application
-
-	// Gnome
-	ExecProgram execGsettings("gsettings get org.gnome.desktop.default-applications.terminal exec", "");
-	if (execGsettings.execAndWait()) {
-		/*
-			1. "gsettings" terminates with exit code 0 if settings were fetched successfully.
-			2. The returned value has a trailing LF so we trim it.
-			3. The command is wrapped in single quotes, e.g. 'gnome-terminal' so we remove the single quotes.
-		 */
-		return execGsettings.m_standardOutput.trimmed().replace('\'', "");
-	}
-
-	// Fallback
-	QStringList fallbacks = QStringList() << "konsole" << "xterm";
-	foreach (const QString &fallback, fallbacks) {
-		ExecProgram execWhich("which " + fallback, "");
-		if (execWhich.execAndWait()) {
-			// "which" terminates with exit code 0 if settings were fetched successfully
-			return execWhich.m_standardOutput;
-		}
-	}
-#elif defined(Q_OS_WIN)
-	QString command = QString::fromLocal8Bit(qgetenv("COMSPEC"));
-	if (command != "") {
-		return command;
-	}
-#endif
-	return QString("<unknown>");
+	return QString("konsole");
 }
 
 void BuildManager::checkOSXElCapitanDeprecatedPaths(QSettings &settings, const QStringList &commands)
